<?php
/**
 * Created by PhpStorm.
 * User: [一秋]
 * Date: 2018/3/28
 * Time: 16:04
 * Desc: 成功源于点滴
 */

namespace app\index\controller;


use app\index\model\UserToken;
use think\captcha\Captcha;
use think\Request;
use app\common\help\Format;
use think\Session;

class Account extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $uid = Session::get('USER_KEY_ID');

    }

    /**
     * 生成图形验证码
     * @return mixed
     */
    public function getCode(){
        $key ='generate';
        $config = [
            'length'=>4,
            'useNoise'=>false,
            'fontSize'=>16
        ];
        $captcha = new Captcha($config);
        return $captcha->entry($key);
    }

    /**
     * 验证图片验证码
     */
    public function checkVerificationCode(){
        //1.接收参数，检验
        $data = Request::instance()->param();
        $validate = new \app\index\validate\account;
        if (!$validate->scene('checkCode')->check($data)) {
            return json_encode(['code' => 1, 'msg' => $validate->getError()], JSON_UNESCAPED_UNICODE);
        }

        if(!checkMobile($data['mobile'])){
            return json_encode(['code' => 1, 'msg' => '请输入正确的手机号码'], JSON_UNESCAPED_UNICODE);
        }

        $key = 'generate';
        $captcha = new Captcha();
        $result = $captcha->check($data['code'], $key);
        if($result){
            //ok,发送短信
            //是否注册
            $uModel = new \app\index\model\User;
            $info = $uModel->getInfo($data['mobile']);
            if(!empty($info)){
                return json_encode(['code' => 1, 'msg' => '该手机号已经注册'], JSON_UNESCAPED_UNICODE);
            }

            //IP和手机号判断发送次数
            $ip = get_client_ip();
            $pnum = Session::get('reg_'.$data['mobile'].'numbers');
            $ipnum = Session::get('reg_'.$ip.'numbers');


            $res = $this->sendPhoneSms($data['mobile'],'reg');
            if($res['code'] != 0){
                return json_encode(['code' => 1, 'msg' => '发送失败:'.$res['errorMsg']], JSON_UNESCAPED_UNICODE);
            }else{
                return json_encode(['code' => 0, 'msg' => '发送成功'], JSON_UNESCAPED_UNICODE);
            }
        }else{
            //$this->retMsg(['code' => 0, 'msg' => '验证通过']);
            return json_encode(['code' => 1, 'msg' => '图形验证码错误'], JSON_UNESCAPED_UNICODE);
        }
    }

    /*
     * 注册展示页
     */
    public function regIndex()
    {
        $uid = Session::get('USER_KEY_ID');
        if(!empty($uid)){
            $this->redirect('/');
        }
        //表单令牌
        $token = $this->request->token('__token__');
        $this->assign('token', $token);

        $this->assign('seo_title', '注册 - 小鱼试用');
        return view('regindex');
    }


    /**
     * 用户注册-请求
     * @return array
     */
    public function register(){
        //1.接收参数
        $data = Request::instance()->param();
        $addData = [];
        $validate = new \app\index\validate\account;
        if (!$validate->scene('regCheck')->check($data))
        {
           //$this->retMsg(['code' => 1, 'msg' => $validate->getError()]);
            return json_encode(['code' => 1, 'msg' => $validate->getError()], JSON_UNESCAPED_UNICODE);
        }

        //手机号格式
        if(!checkMobile($data['mobile'])){
            return json_encode(['code' => 1, 'msg' => '请输入正确的手机号码'], JSON_UNESCAPED_UNICODE);
        }

        //类型是商家，就变成商家类型
        if($data['type'] == 2)
        {
            $addData['user_type'] = 2;//1=用户 2=商家
        }

        //判断是否填写了QQ
        if(empty($data['qq'])){
            //$this->retMsg(['code' => 1, 'msg' => '请输入QQ号!']);
            return json_encode(['code' => 1, 'msg' => '请输入QQ号!'], JSON_UNESCAPED_UNICODE);
        }

        //短信验证码 和 手机号
        $phone = Session::get('phone_reg');
        $vcode = Session::get('vcode_reg');
        if($data['vcode'] != $vcode)
        {
            //记录错误次数
            $errnum = Session::get('error_num_reg');
            if(empty($errnum)){
                Session::set('error_num_reg', 1);
            }else{
                Session::set('error_num_reg', ($errnum+1));
            }

            //错误5次，销毁验证码
            if($errnum == 10){
                Session::delete('vcode_reg');
                Session::delete('error_num_reg');
            }

            //$this->retMsg(['code' => 1, 'msg' => '手机验证码错误!']);
            //return json_encode(['code' => 1, 'msg' => '手机验证码错误!'], JSON_UNESCAPED_UNICODE);
        }

        //手机号
        if($data['mobile'] != $phone){
            //$this->retMsg(['code' => 1, 'msg' => '手机和接收手机号码不一致!']);
            //return json_encode(['code' => 1, 'msg' => '手机和接收手机号码不一致'], JSON_UNESCAPED_UNICODE);
        }

        //是否注册
        $userModel = new \app\index\model\User();
        $uInfo = $userModel->getInfo($data['mobile']);
        if(!empty($uInfo)){
            //$this->retMsg(['code' => 1, 'msg' => '手机号已注册']);
            return json_encode(['code' => 1, 'msg' => '手机号已注册'], JSON_UNESCAPED_UNICODE);
        }


        //邀请码
        if(!empty($data['agent'])){
            $pid = $userModel->getAgent($data['agent'],'id');
            if(!empty($pid)){
                $addData['superior_agent'] = $data['agent'];
            }else{
                //$this->retMsg(['code' => 1, 'msg' => '请输入正确的邀请码']);
                return json_encode(['code' => 1, 'msg' => '请输入正确的邀请码'], JSON_UNESCAPED_UNICODE);
            }
        }

        //成功，也要删除
        Session::delete('vcode_reg');

        //增加数据
        $addData['mobile']= $data['mobile'];
        $addData['status']= 1;
        $addData['user_pass'] = up_pass($data['psd']);
        $addData['encrypt'] = 'up';
        $addData['regip'] = get_client_ip();
        //生成自己的邀请码
        $addData['my_agent'] = $this->proVcode();
        $result = $userModel->addUser($addData);
        if(empty($result))
        {
            //$this->retMsg(['code' => 1, 'msg' => '注册失败，系统错误']);
            return json_encode(['code' => 1, 'msg' => '注册失败，系统错误'], JSON_UNESCAPED_UNICODE);
        }
        //$this->retMsg(['code' => 0, 'msg' => '注册成功']);
        return json_encode(['code' => 0, 'msg' => '注册成功'], JSON_UNESCAPED_UNICODE);

    }
}