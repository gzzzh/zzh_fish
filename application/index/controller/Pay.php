<?php
/**
 * Created by PhpStorm.
 * User: lenovo
 * Date: 2018/12/21
 * Time: 14:04
 */

namespace app\index\controller;

use think\Db;
use think\Request;
use think\Session;
class Pay extends HomeBaseController
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }


    /**
     * 提现页
     */
    public function txIndex()
    {
        //是否绑定支付宝
        if($this->uInfo['alipay_status'] != 1){
            $this->error('请先绑定支付宝');
        }
        $uid = $this->userId;

        //支付宝账号
        $alipay = new \app\index\model\BindAlipay;
        $aliInfo = $alipay->getUserAlipayInfos(['userid' => $uid, 'status' => 2],'id,account');

        //账号余额
        $user = [
            'mobile' => $this->uInfo['mobile'],
            'money' => $this->uInfo['money'],
            'frozen_money' => $this->uInfo['frozen_money'],
            'no_withdraw' => $this->uInfo['no_withdraw']
        ];

        //接收页码
        $nPage = Request::instance()->param('page');
        $page = 1;
        if(!empty($nPage)){
            $page = (intval($nPage) > 0) ? intval($nPage) : 1;
        }

        //找出用户提现记录列表
        $cModel = new \app\index\model\Cash;
        $list = $cModel->getUserCashList($uid,$page,'id,userid,money,status,cash_alipay_username,check_time');

        //总数据
        $counts = $cModel->countPageUserCash($uid);

        $this->assign('user', $user);
        $this->assign('list', $list);
        $this->assign('aliInfo', $aliInfo);
        $this->assign('cNumber', $counts['cNumber']);
        $this->assign('cPage', $counts['cPage']);
        $this->assign('page', $page);
        return view('index');

    }


    /**
     * 提现-发短信
     */
    public function sendTxSms()
    {
        $mobile = $this->uInfo['mobile'];
        //手机号
        if(!checkMobile($mobile) || empty($mobile)){
            return json_encode(['code' => 1, 'msg' => '发送失败，手机号有误'], JSON_UNESCAPED_UNICODE);
        }

        //发送
        $res = $this->sendPhoneSms($mobile,'tx');
        if($res['code'] != 0){
            return json_encode(['code' => 1, 'msg' => '发送失败:'.$res['errorMsg']], JSON_UNESCAPED_UNICODE);
        }else{
            return json_encode(['code' => 0, 'msg' => '发送成功'], JSON_UNESCAPED_UNICODE);
        }
    }


    /**
     * 提现操作
     */
    public function checkTx()
    {
        //是否绑定支付宝
        if($this->uInfo['alipay_status'] != 1){
            $this->error('请先绑定支付宝');
        }

        $uid = $this->userId;
        $data = Request::instance()->param();
        $validate = new \app\index\validate\pay;
        if (!$validate->scene('checkPay')->check($data))
        {
            $this->error($validate->getError());
        }

        //最小金额
        if($data['money'] < 100){
            $this->error('最小提现额度为100元');
        }

        //1.判断手机号和短信验证码
        $phone = Session::get('phone_tx');
        $vcode = Session::get('vcode_tx');
        if($data['vcode'] != $vcode)
        {
            //记录错误次数
            $errnum = Session::get('error_num_tx'.$vcode);
            if(empty($errnum)){
                Session::set('error_num_tx'.$vcode, 1);
            }else{
                Session::set('error_num_tx'.$vcode, ($errnum+1));
            }
            //错误5次，销毁验证码
            if($errnum == 10){
                Session::delete('vcode_tx');
                Session::delete('error_num_tx'.$vcode);
            }
            //return json_encode(['code' => 1, 'msg' => '手机验证码错误!'], JSON_UNESCAPED_UNICODE);
        }

        //手机号
        if($this->uInfo['mobile'] != $phone){
            //$this->retMsg(['code' => 1, 'msg' => '手机和接收手机号码不一致!']);
            //return json_encode(['code' => 1, 'msg' => '手机和接收手机号码不一致'], JSON_UNESCAPED_UNICODE);
        }

        Session::delete('vcode_tx');
        Session::delete('error_num_tx'.$vcode);

        //2.检验账号信息
        $uModel = new \app\index\model\User;
        $uInfo = $uModel->getUserInfoNotType($uid,'mobile, money, status');
        if ($uInfo['money'] < $data['money']){
            $this->error('账户余额不足，无法提现');
        }

        //添加提现数据
        Db::startTrans();
        //user表冻结额
        $res = $uModel->setUserTx($uid,$data['money']);
        if(empty($res)){
            Db::rollback();
            $this->error('冻结失败，系统错误');
        }

        $cModel = new \app\index\model\Cash;
        $addData = [
            'userid' => $uid,
            'money'  => $data['money'],
            'ip'     => get_client_ip(),
            'cash_alipay_username' => $data['cash_alipay_username'],
            'totalmoney' => $data['money'],
        ];
        $res = $cModel->insertGetId($addData);
        if(empty($res)){
            Db::rollback();
            $this->error('添加提现数据失败，系统错误');
        }

        Db::commit();
        $this->redirect('/ty/tixian','',1,'ok');
    }


    /**
     * 充值页面
     */
    public function czMoneyList()
    {
        //收款账号、名字、imgs
        $user = [
            'account' => '17301938036',
            'name'    => '周志豪1994',
            'imgs'    => ''
        ];

        $this->assign('user', $user);
        return view('cz_money');
    }


    /**
     * 充值提交信息
     */
    public function checkCz()
    {
        $uid = $this->userId;
        $data = Request::instance()->param();
        $validate = new \app\index\validate\pay;
        if (!$validate->scene('checkCz')->check($data))
        {
            //$this->retMsg(['code' => '1', 'msg' => $validate->getError()]);
            $this->error($validate->getError());
        }

        //检测频率

        //增加数据
        $addData = [
            'userid' => $uid,
            'money'  => $data['cz_money'],
            'tran_number' => $data['tran_number']
        ];
        $pModel = new \app\index\model\PayCheck;
        $res = $pModel->addUserCz($addData);

        if(empty($res)){
            $this->error('添加充值数据失败，系统错误');
            return ;
        }

        $this->redirect('/ty/czlist', '',1,'ok');

    }


    /**
     * 商家申请-VIP页面
     */
    public function userGetVip()
    {
        //判断用户类型
        if($this->uInfo['user_type'] != 2){
            $this->error('只有商家才能申请成为VIP');
        }

        //VIP
        $uid = $this->userId;
        if($this->uInfo['is_vip']  == 4){
            $this->error('VIP审核中，请等待');
        }elseif($this->uInfo['is_vip']  != 0){
            $this->error('您已经是VIP用户啦');
        }

        //判断是否等待审核
        //表单令牌
        $token = $this->request->token('__token__');
        $this->assign('token', $token);

        return view('bind_vip');
    }


    /**
 * 商家-提交VIP请求
 */
    public function checkUserVip()
    {
        //判断用户类型
        if($this->uInfo['user_type'] != 2){
            $this->error('只有商家才能申请成为VIP');
        }

        //VIP
        $uid = $this->userId;
        if($this->uInfo['is_vip']  == 4){
            $this->error('VIP审核中，请等待');
        }elseif($this->uInfo['is_vip']  != 0){
            $this->error('您已经是VIP用户啦');
        }

        //接收参数
        $uid = $this->userId;
        $data = Request::instance()->param();
        $validate = new \app\index\validate\pay;
        if (!$validate->scene('checkVip')->check($data))
        {
            $this->error($validate->getError());
        }

        $addData = [
            'userid' => $uid,
            'vip_type' => $data['vip_type'],
            'tran_number' => $data['tran_number'],
        ];
        //根据申请类型，预计充值金额
        switch ($data['vip_type']){
            case 1:
                $addData['money'] = 888;
                break;

            case 2:
                $addData['money'] = 1888;
                break;

            case 3:
                $addData['money'] = 2888;
                break;
        }

        //事务
        Db::startTrans();
        //1.添加数据
        $uModel = new \app\index\model\User;
        $pModel = new \app\index\model\payVip;
        $res = $pModel->insertGetId($addData);
        if(empty($res)){
            Db::rollback();
            $this->error('添加失败，系统错误');
        }

        //修改VIP状态
        $res = $uModel->saveLogin($uid, ['is_vip' => 4]);
        if(empty($res)){
            Db::rollback();
            $this->error('VIP状态修改失败，系统错误');
        }

        Db::commit();
        $this->redirect('/biz/index');
    }
}