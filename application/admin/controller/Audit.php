<?php
/**
 * Created by PhpStorm.
 * User: lenovo
 * Date: 2018/12/24
 * Time: 16:01
 */

namespace app\admin\controller;

use think\Request;
use think\Db;
use think\session;
class Audit extends Admin
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 用户淘宝审核列表
     */
    public function userTaobaoList()
    {
        $buModel = new \app\admin\model\BindUserShop;
        $list = $buModel->getUserAudit();
        // 获取分页显示
        $page = $list->render();
        $this->assign('list', $list);
        $this->assign('page', $page);
        // 渲染模板输出
        return view('user_index');
    }


    /**
     * 用户淘宝 - 通过|驳回 审核
     */
    public function pass()
    {
        //搜索参数
        $data = Request::instance()->param();
        empty($data['id']) && $this->error('请传递数据ID');
        empty($data['userid']) && $this->error('请传递UID');
        empty($data['type']) && $this->error('请传递类型参数');
        if($data['type'] == 'pass'){
            $updata = ['status' => 2];
            $userUpdate = ['taobao_status' => 1];
        }elseif($data['type'] = 'reject'){
            $updata = ['status' => 3];
            $userUpdate = ['taobao_status' => 0];
        }else{
            $this->error('类型参数非法');
        }

        //开始修改状态
        Db::startTrans();
        $buModel = new \app\admin\model\BindUserShop;
        $result = $buModel->userAuditPass($data['id'],$updata);
        //判断修改结果
        if(empty($result)){
            Db::rollback();
            $this->error('该数据已被别人操作');
        }else{
            $mid = Session::get('admin_userid');
            $res = $buModel->updateUserShops($data['id'], ['audit_admin' => $mid, 'audit_time' => date('Y-m-d H:i:s')]);

            //开始修改用户表
            $uModel = new \app\admin\model\User;
            $res2 = $uModel->editUserStatus($data['userid'], $userUpdate);
            if(empty($res2) || empty($res)){
                Db::rollback();
                $this->error('修改失败，该数据已操作');
            }else{
                Db::commit();
                $this->redirect('Audit/userTaobaoList','',1,'OK');
            }
        }

    }


    /**
     * 支付宝审核列表
     */
    public function userAliList()
    {
        $buModel = new \app\admin\model\BindAlipay;
        $list = $buModel->UserAlipayList();
        // 获取分页显示
        $page = $list->render();

        $this->assign('list', $list);
        $this->assign('page', $page);
        // 渲染模板输出
        return view('alipay_index');
    }


    /**
     * 支付宝 通过|驳回 审核
     */
    public function alipayAudit()
    {
        //搜索参数
        $data = Request::instance()->param();
        empty($data['id']) && $this->error('请传递数据ID');
        empty($data['userid']) && $this->error('请传递UID');
        empty($data['type']) && $this->error('请传递类型参数');
        if($data['type'] == 'pass'){
            $updata = ['status' => 2];
            $userUpdate = ['alipay_status' => 1];

        }elseif($data['type'] = 'reject'){
            $updata = ['status' => 3];
            $userUpdate = ['alipay_status' => 1];
        }else{
            $this->error('类型参数非法');
        }

        //开始修改状态
        Db::startTrans();
        $aModel = new \app\admin\model\BindAlipay;
        $result = $aModel->alipayAuditPass($data['id'], $updata);
        //判断修改结果
        if(empty($result)) {
            Db::rollback();
            $this->error('该数据已被别人操作');
        }else{
            $mid = Session::get('admin_userid');
            $res = $aModel->alipayAuditPass($data['id'], ['audit_admin' => $mid, 'audit_time' => date('Y-m-d H:i:s')]);
            //开始修改用户表
            $uModel = new \app\admin\model\User;
            $res2 = $uModel->editUserStatus($data['userid'], $userUpdate);
            if(empty($res2) || empty($res)){
                Db::rollback();
                $this->error('修改失败，该数据已操作');
            }else{
                Db::commit();
                $this->redirect('Audit/userAliList','',1,'OK');
            }
        }

    }


    /**
     * 商家淘宝店铺审核列表
     */
    public function shopsTaobaoList()
    {
        $mModel = new \app\admin\model\Merchant;
        $list = $mModel->getShopsAuditList();
        // 获取分页显示
        $page = $list->render();
        $this->assign('list', $list);
        $this->assign('page', $page);
        // 渲染模板输出
        return view('shop_index');
    }


    /**
     * 商家淘宝店铺-通过or驳回操作
     */
    public function shopsTaobaoUserPass()
    {
        //搜索参数
        $data = Request::instance()->param();
        empty($data['id']) && $this->error('请传递数据ID');
        empty($data['userid']) && $this->error('请传递UID');
        empty($data['type']) && $this->error('请传递类型参数');
        if($data['type'] == 'pass'){
            $updata = ['shop_status' => 2];
            $userUpdate = ['taobao_status' => 1];
        }elseif($data['type'] = 'reject'){
            $updata = ['shop_status' => 3];
            $userUpdate = ['taobao_status' => 0];
        }else{
            $this->error('类型参数非法');
        }

        //开始修改状态
        Db::startTrans();
        $mModel = new \app\admin\model\Merchant;
        $result = $mModel->setShopsStatus($data['id'], $updata);
        //判断修改结果
        if(empty($result)){
            Db::rollback();
            $this->error('数据已被别人操作');
        }else{
            $mid = Session::get('admin_userid');
            $res = $mModel->updateShopsMessagess(['id' => $data['id']], ['audit_name' => $mid, 'audit_time' => date('Y-m-d H:i:s')]);
            if(empty($res)){
                Db::rollback();
                $this->error('修改失败，关联审核人信息失败');
            }
            //开始修改用户表
            $uModel = new \app\admin\model\User;
            $res2 = $uModel->editUserStatus($data['userid'], $userUpdate);
            if(empty($res2)){
                Db::rollback();
                $this->error('修改失败，用户淘宝状态修改失败');
            }else{
                Db::commit();
                $this->redirect('Audit/shopsTaobaoList','',1,'OK');
            }
        }
    }



    /**
     * 商家-店铺信息修改页面
     */
    public function editShops()
    {
        $id = Request::instance()->param('id');
        $id = intval($id);
        empty($id) && $this->error('非法请求，参数有误');

        //获取信息，展示
        $mModel = new \app\index\model\Merchant;
        $info = $mModel->idGetMerchantInfo($id);

        $this->assign('info', $info);
        return View('shop_edit');
    }


    /**
     * 修改淘宝店铺信息
     */
    public function saveShops()
    {
        $data = Request::instance()->param();

        //接收数据
        $validate = new \app\admin\validate\merchant;
        if (!$validate->scene('checkMerchant')->check($data))
        {
            $this->error($validate->getError());
        }

        $mModel = new \app\admin\model\Merchant;
        //1.判断店铺是否存在
        $info = $mModel->getMerchantInfos($data['id'],'id,store_name');
        empty($info) && $this->error('不存在的店铺信息');

        //2.开始修改
        $updata = [
            'store_name' => $data['store_name'],
            'wang_name' => $data['wang_name'],
            'store_url' => $data['store_url'],
            'store_qq' => $data['store_qq'],
            'mobile' => $data['mobile'],
        ];
        $res = $mModel->updateShopsMessagess(['id' => $data['id']], $updata);
        if($res === false){
            $this->error('修改店铺信息失败，系统错误');
        }

        $this->redirect('Audit/shopsTaobaoList','',1,'OK');
    }

}